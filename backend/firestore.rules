rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow users to read/write only their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Artworks: Everyone can read, only artists can create/update/delete
    match /artworks/{artworkId} {
      allow read: if true;
      allow create, update, delete: if isArtist();
    }

    // Categories: Public read, no writes allowed (static)
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if false;
    }

    // Orders: Users can manage only their own orders
    match /orders/{orderId} {
      allow read, write: if request.auth != null &&
                         request.resource.data.userId == request.auth.uid;
    }

    // Cart: Nested under each user, private access
    match /users/{userId}/cart/{cartItemId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Helper function to check if user is an artist
    function isArtist() {
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'artist';
    }
  }
}
